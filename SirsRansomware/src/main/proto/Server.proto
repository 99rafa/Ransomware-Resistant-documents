// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "proto";
option java_outer_classname = "ServerProto";
option objc_class_prefix = "CTS";

package proto;

// The greeting service definition.
service Server {
  // Sends a greeting
  rpc Register (RegisterRequest) returns (RegisterReply) {}
  rpc Login (LoginRequest) returns (LoginReply) {}
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc Push (PushRequest) returns (PushReply) {}
  rpc PullAll (PullAllRequest) returns (PullReply) {}
  rpc PullSelected (PullSelectedRequest) returns (PullReply) {}
  rpc GivePermission (GivePermissionRequest) returns (GivePermissionReply) {}
  rpc Salt(SaltRequest) returns (SaltReply) {}
  rpc GetAESEncrypted(GetAESEncryptedRequest) returns (GetAESEncryptedReply){}
  rpc GetPublicKeysByFile(GetPublicKeysByFileRequest) returns (GetPublicKeysByFileReply){}
  rpc GetPublicKeysByUsernames(GetPublicKeysByUsernamesRequest) returns (GetPublicKeysByUsernamesReply){}
  rpc GetFileOwnerPublicKey(GetFileOwnerPublicKeyRequest) returns  (GetFileOwnerPublicKeyReply){}
}

message GetFileOwnerPublicKeyRequest{
  string uid = 1;
}

message GetFileOwnerPublicKeyReply{
  bytes public_key = 1;
}

message GetPublicKeysByFileRequest{
  string file_uid = 1;
}

message GetPublicKeysByFileReply{
  repeated string usernames = 1;
  repeated bytes keys = 2;
}

message GetPublicKeysByUsernamesRequest{
  repeated string usernames = 1;
}

message GetPublicKeysByUsernamesReply{
  repeated string usernames = 1;
  repeated bytes keys = 2;
}

message SaltRequest {
  string username = 1;
}

message SaltReply {
  bytes salt = 1;
}

// The request message containing the user's name.
message RegisterRequest {
  string username = 1;
  bytes password = 2;
  bytes salt = 3;
  bytes publicKey=4;
}

// The response message containing the greetings
message RegisterReply {
  string ok = 1;
}

message LoginRequest {
  string username = 1;
  bytes password = 2;
}

message LoginReply {
  bool ok_username = 1;
  bool ok_password = 2;
}

message PullAllRequest{
  string username = 1;
  bytes password = 2;
}

message PullSelectedRequest{
  string username = 1;
  bytes password = 2;
  repeated string uids = 3;
}


message PullReply{
  repeated string uids = 1;
  repeated string filenames = 2;
  repeated string owners = 3;
  repeated bytes files = 4;
  repeated string partIds = 5;
  repeated bytes digital_signatures = 6;
  bool ok = 7;
}



message PushRequest {
  bytes file = 1;
  string uid = 2;
  string file_name = 3;
  string username = 4;
  bytes password = 5;
  string part_id = 6;
  bytes digital_signature = 7;
}

message PushReply {
  bool ok = 1;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
//Give read/write or both file access permission to a person
message GivePermissionRequest{
  string other = 1;
  string uid = 2;
  string mode = 3;
  bytes AESEncrypted= 4;
}

message GivePermissionReply{
  bool ok_other = 2;
  bool ok_uid = 3;
  bool ok_mode = 4;
}
message GetAESEncryptedRequest{
  string username=1;
  string other=2;
  string uid=3;
}

message GetAESEncryptedReply{
  bool is_owner =1;
  bytes AESEncrypted=2;
}



